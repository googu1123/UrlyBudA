<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="tsm_sql">

	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias  alias="tsmVO" type="egovframework.rte.cms.service.TsmVO"/>
	
	<resultMap id="admin_info" class="egovframework.rte.cms.service.TsmVO">
		<result property="aidx" column="aidx"/>
		<result property="name" column="name"/>
		<result property="phone" column="phone"/>
		<result property="cidx" column="cidx"/>
		<result property="reg_date" column="reg_date"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
	<select id="tsmDAO.loginCheck" parameterClass="tsmVO" resultMap="admin_info">
		SELECT AIDX, NAME, PHONE, CIDX, REG_DATE, AUTH
		FROM SMART_AGENT_INFO
		WHERE AIDX = #aidx# AND PASSWD = #passwd#
	</select>
	
	
	<!-- 메시지 규격 리스트 조회 -->
	<resultMap id="standList" class="egovframework.rte.cms.service.TsmVO">
		<result property="pidx" column="pidx"/>
		<result property="aidx" column="aidx"/>
		<result property="code" column="code"/>
		<result property="subject" column="subject"/>
		<result property="content" column="content"/>
		<result property="reg_date" column="reg_date"/>
		<result property="use_yn" column="use_yn"/>
		<result property="process" column="process"/>
	</resultMap>
	
	<!-- 캠페인 리스트 조회 -->
	<resultMap id="campaignList" class="egovframework.rte.cms.service.TsmVO">
		<result property="seq" column="seq"/>
		<result property="aidx" column="aidx"/>
		<result property="subject" column="subject"/>
		<result property="content" column="content"/>
		<result property="wrtdate" column="wrtdate"/>
		<result property="link_limit" column="link_limit"/>
		<result property="link_limit_day" column="link_limit_day"/>
		<result property="link_cnt" column="link_cnt"/>
		<result property="use_yn" column="use_yn"/>
	</resultMap>
	
	<select id="tsmDAO.msgStandardCnt" parameterClass="tsmVO" resultClass="int">
		SELECT COUNT(*) as CNT
		FROM SMART_MESSAGE_TEMPLATE
		WHERE 1=1 
			<isNotNull property="code">
				<isNotEmpty property="code">
			           AND CODE LIKE CONCAT('%' , #code# , '%') 
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="aidx">
				<isNotEmpty property="aidx">
					AND AIDX LIKE CONCAT('%' , #aidx# , '%')
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="content">
				<isNotEmpty property="content">
					AND CONTENT LIKE CONCAT('%' , #content# , '%')
				</isNotEmpty>
			</isNotNull>
			<isNotEqual property="use_yn" compareValue="All">
				<isNotNull property="use_yn">
					<isNotEmpty property="use_yn">
						AND USE_YN = #use_yn#
					</isNotEmpty>
				</isNotNull>
			</isNotEqual>
	</select>
	
	<select id="tsmDAO.msgStandard" parameterClass="tsmVO" resultMap="standList">
		SELECT PIDX, CODE, AIDX, SUBJECT, CONTENT, DATE_FORMAT(IFNULL(MOD_DATE, REG_DATE),'%Y-%m-%d') as REG_DATE, USE_YN, PROCESS, `USE`, LIMIT_YN, LIMIT_TYPE, LIMIT_COUNT, LIMIT_START_HOUR, LIMIT_END_HOUR
		FROM (
			SELECT @RN:= @RN+1 as IDX, PIDX, CODE, AIDX, SUBJECT, CONTENT, REG_DATE, MOD_DATE, USE_YN, PROCESS, `USE`, LIMIT_YN, LIMIT_TYPE, LIMIT_COUNT, LIMIT_START_HOUR, LIMIT_END_HOUR
			FROM SMART_MESSAGE_TEMPLATE te, (SELECT @RN := 0) ct
			WHERE 1=1 
			<isNotNull property="code">
				<isNotEmpty property="code">
			           AND CODE LIKE CONCAT('%' , #code# , '%') 
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="aidx">
				<isNotEmpty property="aidx">
					AND AIDX LIKE CONCAT('%' , #aidx# , '%')
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="content">
				<isNotEmpty property="content">
					AND CONTENT LIKE CONCAT('%' , #content# , '%')
				</isNotEmpty>
			</isNotNull>
			<isNotEqual property="use_yn" compareValue="All">
				<isNotNull property="use_yn">
					<isNotEmpty property="use_yn">
						AND USE_YN = #use_yn#
					</isNotEmpty>
				</isNotNull>
			</isNotEqual>
		) a
		ORDER BY a.REG_DATE DESC
		LIMIT #startNum#, #recordCount#
	</select>
	
	
	<!-- 메시지 규격 상세 -->
	<resultMap id="standDetail" class="egovframework.rte.cms.service.TsmVO">
		<result property="pidx" column="pidx"/>
		<result property="aidx" column="aidx"/>
		<result property="code" column="code"/>
		<result property="subject" column="subject"/>
		<result property="content" column="content"/>
		<result property="reg_date" column="reg_date"/>
		<result property="mod_date" column="mod_date"/>
		<result property="priority" column="priority"/>
		<result property="use_yn" column="use_yn"/>
		<result property="deli_no" column="deli_no"/>
		<result property="description" column="description"/>
		<result property="table_div" column="table_div"/>
		<result property="info_yn" column="info_yn"/>
		<result property="div_nm" column="div_nm"/>
		<result property="process" column="process"/>
		<result property="use" column="use"/>
		<result property="limit_yn" column="limit_yn"/>
		<result property="limit_type" column="limit_type"/>
		<result property="limit_count" column="limit_count"/>
		<result property="limit_start_hour" column="limit_start_hour"/>
		<result property="limit_end_hour" column="limit_end_hour"/>
		<result property="add_content_yn" column="add_content_yn"/>
		<result property="add_content" column="add_content"/>
		<result property="link_btn_name" column="link_btn_name"/>
		<result property="link_btn_url" column="link_btn_url"/>
	</resultMap>
	
	<resultMap id="campaignDetail" class="egovframework.rte.cms.service.TsmVO">
		<result property="seq" column="seq"/>
		<result property="aidx" column="aidx"/>
		<result property="subject" column="subject"/>
		<result property="content" column="content"/>
		<result property="wrtdate" column="wrtdate"/>
		<result property="link_limit" column="link_limit"/>
		<result property="link_limit_day" column="link_limit_day"/>
		<result property="link_cnt" column="link_cnt"/>
		<result property="use_yn" column="use_yn"/>
	</resultMap>
	
	<select id="tsmDAO.msgStandardDetail" parameterClass="tsmVO" resultMap="standDetail">
		SELECT PIDX, CODE, AIDX, SUBJECT, CONTENT
			, DATE_FORMAT(REG_DATE,'%Y-%m-%d') as REG_DATE
			, DATE_FORMAT(IFNULL(MOD_DATE,now()),'%Y-%m-%d') as MOD_DATE
			, PRIORITY
			, USE_YN
			, DESCRIPTION
			, DELI_NO
			, TABLE_DIV
			, INFO_YN
			, DIV_NM
			, PROCESS
			, `USE`
			, LIMIT_YN
			, LIMIT_TYPE
			, LIMIT_COUNT
			, LIMIT_START_HOUR
			, LIMIT_END_HOUR
			, ADD_CONTENT_YN
			, ADD_CONTENT
			, LINK_BTN_NAME, LINK_BTN_URL
		FROM SMART_MESSAGE_TEMPLATE
		WHERE PIDX = #pidx#
	</select>
	
	
	<!-- 메시지 규격 등록 -->
	<insert id="tsmDAO.msgStandardInsert" parameterClass="tsmVO">
		INSERT INTO SMART_MESSAGE_TEMPLATE(
			CODE, SUBJECT, AIDX, CONTENT, REG_DATE, PRIORITY, USE_YN, TABLE_DIV, INFO_YN, DIV_NM, DESCRIPTION, PROCESS
			, `USE`
			, LIMIT_YN, LIMIT_TYPE, LIMIT_COUNT, LIMIT_START_HOUR, LIMIT_END_HOUR, ADD_CONTENT_YN, ADD_CONTENT
			, LINK_BTN_NAME, LINK_BTN_URL
		) VALUES (
			 '-', #subject#, #aidx#
			, #content#
			, now(), #priority#, #use_yn#, #table_div#, #info_yn#, #div_nm#, #description#, 'A', 'N'
			, #limit_yn#, #limit_type#, #limit_count#, #limit_start_hour#, #limit_end_hour#, #add_content_yn#, #add_content#
			, #link_btn_name#, #link_btn_url#
		)
		
		<selectKey keyProperty="pidx" resultClass="String">
			SELECT PIDX FROM (
				SELECT PIDX FROM SMART_MESSAGE_TEMPLATE ORDER BY REG_DATE DESC
			) d
			LIMIT 1
	   </selectKey>
	</insert>
	
	<insert id="tsmDAO.msgStandardInsertHistory" parameterClass="tsmVO">
		INSERT INTO SMART_MESSAGE_TEMPLATE_HISTORY(
			CODE, SUBJECT, AIDX, CONTENT, REG_DATE, MOD_DATE, PRIORITY, USE_YN, TABLE_DIV, INFO_YN, DIV_NM, DESCRIPTION, STATUS, PROCESS, `USE`, DELI_NO
			,LIMIT_YN, LIMIT_TYPE, LIMIT_COUNT, LIMIT_START_HOUR, LIMIT_END_HOUR, ADD_CONTENT_YN, ADD_CONTENT
			, LINK_BTN_NAME, LINK_BTN_URL
		) VALUES (
			#code#, #subject#, #aidx#
			, #content#
			, now(), now(), #priority#, #use_yn#, #table_div#, #info_yn#, #div_nm#, #description#, #status#, #process#, #use#, #deli_no#
			, #limit_yn#, #limit_type#, #limit_count#, #limit_start_hour#, #limit_end_hour#, #add_content_yn#, #add_content#
			, #link_btn_name#, #link_btn_url#
		)
	</insert>
	
	<delete id="tsmDAO.msgStandardDelete" parameterClass="tsmVO">
		DELETE FROM SMART_MESSAGE_TEMPLATE
		WHERE PIDX = #pidx#
	</delete>
	
	<update id="tsmDAO.msgStandardUpdate" parameterClass="tsmVO">
		UPDATE SMART_MESSAGE_TEMPLATE
		SET
			CONTENT = #content#,
			USE_YN = #use_yn#,
			PRIORITY = #priority#,
			CODE = #code#,
			DELI_NO = #deli_no#,
			TABLE_DIV = #table_div#,
			INFO_YN = #info_yn#,
			PROCESS = #process#,
			PROC_AIDX = #proc_aidx#,
			MOD_DATE = now(),
			`USE` = #use#,
			LIMIT_YN = #limit_yn#,
			LIMIT_TYPE = #limit_type#,
			LIMIT_COUNT = #limit_count#,
			LIMIT_START_HOUR = #limit_start_hour#,
			LIMIT_END_HOUR = #limit_end_hour#,
			ADD_CONTENT_YN = #add_content_yn#,
			ADD_CONTENT = #add_content#
			, LINK_BTN_NAME = #link_btn_name#
			, LINK_BTN_URL = #link_btn_url#
		WHERE PIDX = #pidx#
	</update>
	
	<!-- 메시지  -->
	<resultMap id="sendList" class="egovframework.rte.cms.service.TsmVO">
		<result property="aidx" column="aidx"/>
		<result property="priority" column="priority"/>
		<result property="t_req" column="t_req"/>
		<result property="reg_date" column="reg_date"/>
	</resultMap>
	
	<select id="tsmDAO.msgSendPriority" parameterClass="tsmVO" resultMap="sendList">
		SELECT AIDX, PRIORITY, T_REQ, REG_DATE
		FROM SMART_MESSAGE_SEND
		LIMIT 1
	</select>
	
	
	<!-- 메시지 이력관리 리스트 조회-->
	<resultMap id="historyList" class="egovframework.rte.cms.service.TsmVO">
		<result property="pidx" column="pidx"/>
		<result property="mtype" column="mtype"/>
		<result property="aidx" column="aidx"/>
		<result property="ukey" column="ukey"/>
		<result property="message" column="message"/>
		<result property="receive_num" column="receive_num"/>
		<result property="sender" column="sender"/>
		<result property="req_date" column="req_date"/>
		<result property="reserve_date" column="reserve_date"/>
		<result property="report_date" column="report_date"/>
		<result property="req_result" column="req_result"/>
		<result property="code" column="code"/>
		<result property="description" column="description"/>
		<result property="send_date" column="send_date"/>
	</resultMap>
	
	<resultMap id="historyDetail" class="egovframework.rte.cms.service.TsmVO">
		<result property="pidx" column="pidx"/>
		<result property="mtype" column="mtype"/>
		<result property="aidx" column="aidx"/>
		<result property="ukey" column="ukey"/>
		<result property="message" column="message"/>
		<result property="receive_num" column="receive_num"/>
		<result property="sender" column="sender"/>
		<result property="req_date" column="req_date"/>
		<result property="reserve_date" column="reserve_date"/>
		<result property="report_date" column="report_date"/>
		<result property="req_result" column="req_result"/>
		<result property="code" column="code"/>
		<result property="description" column="description"/>
		<result property="send_date" column="send_date"/>
		
		<result property="long_link" column="long_link"/>
		<result property="short_link" column="short_link"/>
		<result property="link_limit" column="link_limit"/>
		<result property="link_cnt" column="link_cnt"/>
		<result property="link_auth" column="link_auth"/>
	</resultMap>
	
	<select id="tsmDAO.msgHistoryCnt2" parameterClass="tsmVO" resultClass="int">
		SELECT COUNT(*) as CNT
		<![CDATA[
         	FROM $table_name$ A
        ]]>
		WHERE 1=1
			<isNotEqual property="mtype" compareValue="All">
				<isNotNull property="mtype">
					<isNotEmpty property="mtype">
				           AND MTYPE = #mtype#
					</isNotEmpty>
				</isNotNull>
			</isNotEqual>
			<isEqual property="send_type" compareValue="R">
				<isNotNull property="search_num">
					<isNotEmpty property="search_num">
				           AND RECEIVE_NUM LIKE CONCAT('%', #search_num#, '%')
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isEqual property="result_value" compareValue="S">
				<isNotNull property="result_value">
					<isNotEmpty property="result_value">
				           AND REQ_RESULT = '1000'
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isEqual property="result_value" compareValue="F">
				<isNotNull property="result_value">
					<isNotEmpty property="result_value">
						<![CDATA[
				           AND REQ_RESULT <> '1000'
			           ]]>
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isEqual property="send_type" compareValue="All">
				<isNotNull property="search_num">
					<isNotEmpty property="search_num">
						AND (SENDER LIKE CONCAT('%', #search_num#, '%') OR RECEIVE_NUM LIKE CONCAT('%', #search_num#, '%'))
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isEqual property="send_type" compareValue="S">
				<isNotNull property="search_num">
					<isNotEmpty property="search_num">
				           AND SENDER LIKE CONCAT('%', #search_num#, '%')
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isNotNull property="message">
				<isNotEmpty property="message">
			           AND MESSAGE LIKE CONCAT('%', #message# ,'%')
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="code">
				<isNotEmpty property="code">
			           AND CODE LIKE CONCAT('%' ,#code#, '%') 
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="start_date">
				<isNotEmpty property="start_date">
					<isNotEmpty property="last_date">
						<![CDATA[
							AND REPORT_DATE >= CONCAT(DATE_FORMAT(#start_date#, '%Y-%m-%d'), ' 00:00:00') AND REPORT_DATE <= CONCAT(DATE_FORMAT(#last_date#, '%Y-%m-%d'), ' 23:59:59')
						 ]]>
					 </isNotEmpty>
				 </isNotEmpty>
			 </isNotNull>
	</select>
	
	<select id="tsmDAO.msgHistoryCnt" parameterClass="tsmVO" resultClass="int">
		SELECT COUNT(*) as CNT
		FROM $table_name$
		WHERE 1=1
			<isNotEqual property="mtype" compareValue="All">
				<isNotNull property="mtype">
					<isNotEmpty property="mtype">
				           AND MTYPE = #mtype#
					</isNotEmpty>
				</isNotNull>
			</isNotEqual>
			<isEqual property="send_type" compareValue="R">
				<isNotNull property="search_num">
					<isNotEmpty property="search_num">
				           AND RECEIVE_NUM LIKE CONCAT('%', #search_num#, '%')
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isEqual property="result_value" compareValue="S">
				<isNotNull property="result_value">
					<isNotEmpty property="result_value">
				           AND REQ_RESULT = '1000'
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isEqual property="result_value" compareValue="F">
				<isNotNull property="result_value">
					<isNotEmpty property="result_value">
						<![CDATA[
				           AND REQ_RESULT <> '1000'
			           ]]>
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isEqual property="send_type" compareValue="All">
				<isNotNull property="search_num">
					<isNotEmpty property="search_num">
						AND (SENDER LIKE CONCAT('%', #search_num#, '%') OR RECEIVE_NUM LIKE CONCAT('%', #search_num#, '%'))
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isEqual property="send_type" compareValue="S">
				<isNotNull property="search_num">
					<isNotEmpty property="search_num">
				           AND SENDER LIKE CONCAT('%', #search_num#, '%')
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isNotNull property="message">
				<isNotEmpty property="message">
			           AND MESSAGE LIKE CONCAT('%', #message#, '%')
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="code">
				<isNotEmpty property="code">
			           AND CODE LIKE CONCAT('%', #code#, '%') 
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="start_date">
				<isNotEmpty property="start_date">
					<isNotEmpty property="last_date">
						<![CDATA[
							AND REPORT_DATE >= CONCAT(DATE_FORMAT(#start_date#, '%Y-%m-%d'), ' 00:00:00') AND REPORT_DATE <= CONCAT(DATE_FORMAT(#last_date#, '%Y-%m-%d'), ' 23:59:59')
						 ]]>
					 </isNotEmpty>
				 </isNotEmpty>
			 </isNotNull>
	</select>
	
	<select id="tsmDAO.msgHistory" parameterClass="tsmVO" resultMap="historyList">
		SELECT a.PIDX, a.MTYPE, a.AIDX, a.UKEY, a.MESSAGE, a.RECEIVE_NUM, a.SENDER, a.REQ_DATE, a.RESERVE_DATE, a.REPORT_DATE, a.REQ_RESULT, a.CODE, ec.DESCRIPTION, a.SEND_DATE
		FROM (
			SELECT @RN:= @RN+1 as IDX, lgs.PIDX, lgs.MTYPE, lgs.AIDX, lgs.UKEY, lgs.MESSAGE, lgs.RECEIVE_NUM, lgs.SENDER, lgs.REQ_DATE, lgs.RESERVE_DATE, lgs.REPORT_DATE, lgs.REQ_RESULT, lgs.CODE, SEND_DATE
  			FROM $table_name$ lgs, (SELECT @RN := 0) ct
			WHERE 1=1
			<isNotEqual property="mtype" compareValue="All">
				<isNotNull property="mtype">
					<isNotEmpty property="mtype">
				           AND MTYPE = #mtype#
					</isNotEmpty>
				</isNotNull>
			</isNotEqual>
			<isEqual property="send_type" compareValue="R">
				<isNotNull property="search_num">
					<isNotEmpty property="search_num">
				           AND RECEIVE_NUM LIKE CONCAT('%', #search_num#, '%')
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isEqual property="result_value" compareValue="S">
				<isNotNull property="result_value">
					<isNotEmpty property="result_value">
				           AND REQ_RESULT = '1000'
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isEqual property="result_value" compareValue="F">
				<isNotNull property="result_value">
					<isNotEmpty property="result_value">
						<![CDATA[
				           AND REQ_RESULT <> '1000'
			           ]]>
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isEqual property="send_type" compareValue="All">
				<isNotNull property="search_num">
					<isNotEmpty property="search_num">
						AND (SENDER LIKE CONCAT('%', #search_num#, '%') OR RECEIVE_NUM LIKE CONCAT('%', #search_num#, '%'))
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isEqual property="send_type" compareValue="S">
				<isNotNull property="search_num">
					<isNotEmpty property="search_num">
				           AND SENDER LIKE CONCAT('%', #search_num#, '%')
					</isNotEmpty>
				</isNotNull>
			</isEqual>
			<isNotNull property="message">
				<isNotEmpty property="message">
			           AND MESSAGE LIKE CONCAT('%', #message#, '%')
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="code">
				<isNotEmpty property="code">
			           AND CODE LIKE CONCAT('%', #code#, '%') 
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="start_date">
				<isNotEmpty property="start_date">
					<isNotEmpty property="last_date">
						<![CDATA[
							AND REPORT_DATE >= CONCAT(DATE_FORMAT(#start_date#, '%Y-%m-%d'), ' 00:00:00') AND REPORT_DATE <= CONCAT(DATE_FORMAT(#last_date#, '%Y-%m-%d'), ' 23:59:59')
						 ]]>
					 </isNotEmpty>
				 </isNotEmpty>
			 </isNotNull>
			 ORDER BY REPORT_DATE DESC
		     LIMIT #startNum#, #recordCount#
		) a, SMART_MESSAGE_ERRCODE ec
		WHERE 1=1
		  AND a.REQ_RESULT = ec.CODE 
		  AND a.MTYPE = ec.MTYPE
	</select>
	
	<!-- 이력관리 상세 -->
	<select id="tsmDAO.msgHistoryDetail" parameterClass="tsmVO" resultMap="historyDetail">
		SELECT 
			lgs.PIDX, lgs.MTYPE, lgs.AIDX, lgs.UKEY, lgs.MESSAGE, lgs.RECEIVE_NUM, lgs.SENDER, lgs.REQ_DATE, lgs.RESERVE_DATE, lgs.REPORT_DATE, lgs.REQ_RESULT, lgs.CODE, ec.DESCRIPTION, lgs.SEND_DATE
			,lgs.LONG_LINK, lgs.SHORT_LINK, lgs.LINK_LIMIT, lgs.LINK_CNT, lgs.LINK_AUTH
		FROM $table_name$ lgs, SMART_MESSAGE_ERRCODE ec
		WHERE lgs.REQ_RESULT = ec.CODE AND lgs.MTYPE = ec.MTYPE AND PIDX = #pidx#
	</select>
	
	
	<!-- 통계 -->
	<resultMap id="chart" class="egovframework.rte.cms.service.TsmVO">
		<result property="report_date" column="report_date"/>
		<result property="n_succ" column="n_succ"/>
		<result property="n_fail" column="n_fail"/>
		<result property="a_succ" column="a_succ"/>
		<result property="a_fail" column="a_fail"/>
		<result property="s_succ" column="s_succ"/>
		<result property="s_fail" column="s_fail"/>
		<result property="l_succ" column="l_succ"/>
		<result property="l_fail" column="l_fail"/>
	</resultMap>
	
	<select id="tsmDAO.msgChart" parameterClass="tsmVO" resultMap="chart">
		SELECT
			<isEqual property="day_type" compareValue="D">
				DATE_FORMAT(REPORT_DATE,'%Y-%m-%d') REPORT_DATE,
			</isEqual>
			<isEqual property="day_type" compareValue="M">
				DATE_FORMAT(REPORT_DATE,'%Y-%m') REPORT_DATE,
			</isEqual>
			SUM(CASE WHEN MTYPE= 'N' AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as N_SUCC,
			SUM(CASE WHEN MTYPE= 'N' AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as N_FAIL,
			SUM(CASE WHEN (MTYPE= 'S') AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as S_SUCC,
			SUM(CASE WHEN (MTYPE= 'S') AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as S_FAIL,
			SUM(CASE WHEN (MTYPE='L') AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as L_SUCC,
			SUM(CASE WHEN (MTYPE='L') AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as L_FAIL,
			SUM(CASE WHEN MTYPE= 'A' AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as A_SUCC,
			SUM(CASE WHEN MTYPE= 'A' AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as A_FAIL	
		FROM $table_name$
		WHERE 1=1
			<isNotNull property="start_date">
				<isNotEmpty property="start_date">
					<isNotNull property="last_date">
						<isNotEmpty property="last_date">
							<![CDATA[
								AND REPORT_DATE >= CONCAT(DATE_FORMAT(#start_date#, '%Y-%m-%d'), ' 00:00:00') 
								AND REPORT_DATE <= CONCAT(DATE_FORMAT(#last_date#, '%Y-%m-%d'), ' 23:59:59')
							]]>
						</isNotEmpty>			
					</isNotNull>
				</isNotEmpty>			
			</isNotNull>
		<isEqual property="day_type" compareValue="D">
			GROUP BY DATE_FORMAT(REPORT_DATE, '%Y-%m-%d')
		</isEqual>
		<isEqual property="day_type" compareValue="M">
			GROUP BY DATE_FORMAT(REPORT_DATE, '%Y-%m')
		</isEqual>
		ORDER BY REPORT_DATE DESC
	</select>
	
	<!--문구별 통계 -->
	<resultMap id="codeChart" class="egovframework.rte.cms.service.TsmVO">
		<result property="code" column="code"/>
		<result property="n_succ" column="n_succ"/>
		<result property="n_fail" column="n_fail"/>
		<result property="a_succ" column="a_succ"/>
		<result property="a_fail" column="a_fail"/>
		<result property="s_succ" column="s_succ"/>
		<result property="s_fail" column="s_fail"/>
		<result property="l_succ" column="l_succ"/>
		<result property="l_fail" column="l_fail"/>
	</resultMap>
	
	<select id="tsmDAO.msgChartDetail" parameterClass="tsmVO" resultMap="codeChart">
		SELECT
			CODE ,
			SUM(CASE WHEN MTYPE= 'N' AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as N_SUCC,
			SUM(CASE WHEN MTYPE= 'N' AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as N_FAIL,
			SUM(CASE WHEN (MTYPE= 'S') AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as S_SUCC,
			SUM(CASE WHEN (MTYPE= 'S') AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as S_FAIL,
			SUM(CASE WHEN (MTYPE='L') AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as L_SUCC,
			SUM(CASE WHEN (MTYPE='L') AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as L_FAIL,
			SUM(CASE WHEN MTYPE= 'A' AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as A_SUCC,
			SUM(CASE WHEN MTYPE= 'A' AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as A_FAIL	
		FROM $table_name$
		WHERE 1=1
			<isNotNull property="code">
				<isNotEmpty property="code">
					AND CODE LIKE CONCAT('%', #code# , '%')
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="start_date">
				<isNotEmpty property="start_date">
					<isNotNull property="last_date">
						<isNotEmpty property="last_date">
							<![CDATA[
								AND REPORT_DATE >= CONCAT(DATE_FORMAT(#start_date#, '%Y-%m-%d'), ' 00:00:00') 
								AND REPORT_DATE <= CONCAT(DATE_FORMAT(#last_date#, '%Y-%m-%d'), ' 23:59:59')
							]]>
						</isNotEmpty>			
					</isNotNull>
				</isNotEmpty>			
			</isNotNull>
		GROUP BY CODE
		ORDER BY CODE DESC
	</select>
	
	
	<select id="tsmDAO.msgCodeChart" parameterClass="tsmVO" resultMap="codeChart">
		SELECT
			CODE ,
			SUM(CASE WHEN MTYPE= 'N' AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as N_SUCC,
			SUM(CASE WHEN MTYPE= 'N' AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as N_FAIL,
			SUM(CASE WHEN (MTYPE= 'S') AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as S_SUCC,
			SUM(CASE WHEN (MTYPE= 'S') AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as S_FAIL,
			SUM(CASE WHEN (MTYPE='L') AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as L_SUCC,
			SUM(CASE WHEN (MTYPE='L') AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as L_FAIL,
			SUM(CASE WHEN MTYPE= 'A' AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as A_SUCC,
			SUM(CASE WHEN MTYPE= 'A' AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as A_FAIL	
		FROM $table_name$
		WHERE 1=1
			<isNotNull property="code">
				<isNotEmpty property="code">
					AND CODE LIKE CONCAT('%', #code# , '%')
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="start_date">
				<isNotEmpty property="start_date">
					<isNotNull property="last_date">
						<isNotEmpty property="last_date">
								<![CDATA[
									AND REPORT_DATE >= CONCAT(DATE_FORMAT(#start_date#, '%Y-%m-%d'), ' 00:00:00') 
									AND REPORT_DATE <= CONCAT(DATE_FORMAT(#last_date#, '%Y-%m-%d'), ' 23:59:59')
								]]>
						</isNotEmpty>			
					</isNotNull>
				</isNotEmpty>			
			</isNotNull>
		GROUP BY CODE
		ORDER BY CODE DESC
	</select>
	
	
	<select id="tsmDAO.msgCodeChartDetail" parameterClass="tsmVO" resultMap="chart">
		SELECT
			<isEqual property="day_type" compareValue="D">
				DATE_FORMAT(REPORT_DATE,'%Y-%m-%d') REPORT_DATE,
			</isEqual>
			<isEqual property="day_type" compareValue="M">
				DATE_FORMAT(REPORT_DATE,'%Y-%m') REPORT_DATE,
			</isEqual>
			SUM(CASE WHEN MTYPE= 'N' AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as N_SUCC,
			SUM(CASE WHEN MTYPE= 'N' AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as N_FAIL,
			SUM(CASE WHEN (MTYPE= 'S') AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as S_SUCC,
			SUM(CASE WHEN (MTYPE= 'S') AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as S_FAIL,
			SUM(CASE WHEN (MTYPE='L') AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as L_SUCC,
			SUM(CASE WHEN (MTYPE='L') AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as L_FAIL,
			SUM(CASE WHEN MTYPE= 'A' AND REQ_RESULT = '1000' THEN 1 ELSE 0 END) as A_SUCC,
			SUM(CASE WHEN MTYPE= 'A' AND REQ_RESULT != '1000' THEN 1 ELSE 0 END) as A_FAIL	
		FROM $table_name$
		WHERE 1=1
			AND CODE = #code#
			<isNotNull property="start_date">
				<isNotEmpty property="start_date">
					<isNotNull property="last_date">
						<isNotEmpty property="last_date">
							<![CDATA[
								AND REPORT_DATE >= CONCAT(DATE_FORMAT(#start_date#, '%Y-%m-%d'), ' 00:00:00') 
								AND REPORT_DATE <= CONCAT(DATE_FORMAT(#last_date#, '%Y-%m-%d'), ' 23:59:59')
							]]>
						</isNotEmpty>			
					</isNotNull>
				</isNotEmpty>			
			</isNotNull>
		<isEqual property="day_type" compareValue="D">
			GROUP BY DATE_FORMAT(REPORT_DATE, '%Y-%m-%d')
		</isEqual>
		<isEqual property="day_type" compareValue="M">
			GROUP BY DATE_FORMAT(REPORT_DATE, '%Y-%m')
		</isEqual>
		ORDER BY REPORT_DATE DESC
	</select>
	
	
	<!-- 관리자 계정정보 리스트 -->
	<resultMap id="adminList" class="egovframework.rte.cms.service.TsmVO">
		<result property="idx" column="idx"/>
		<result property="aidx" column="aidx"/>
		<result property="name" column="name"/>
		<result property="phone" column="phone"/>
		<result property="cidx" column="cidx"/>
		<result property="reg_date" column="reg_date"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
	<select id="tsmDAO.adminInfoCnt" parameterClass="tsmVO" resultClass="int">
			SELECT COUNT(*) as CNT
			FROM SMART_AGENT_INFO
			WHERE 1=1
			<isNotNull property="aidx">
				<isNotEmpty property="aidx">
					AND AIDX = #aidx#
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="name">
				<isNotEmpty property="name">
					AND NAME = #name#
				</isNotEmpty>
			</isNotNull>
	</select>
	
	<select id="tsmDAO.adminInfo" parameterClass="tsmVO" resultMap="adminList">
		SELECT IDX, AIDX, NAME, PHONE, CIDX, REG_DATE, AUTH
		FROM
		(
			SELECT @RN:= @RN+1 as IDX, AIDX, NAME, PHONE, CIDX, DATE_FORMAT(REG_DATE,'%Y-%m-%d') REG_DATE, AUTH
			FROM SMART_AGENT_INFO, (SELECT @RN := 0) ct
			WHERE 1=1
			<isNotNull property="aidx">
				<isNotEmpty property="aidx">
					AND AIDX LIKE '%' || #aidx# ||'%'
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="name">
				<isNotEmpty property="name">
					AND NAME LIKE '%' || #name# ||'%'
				</isNotEmpty>
			</isNotNull>
		) a
		ORDER BY REG_DATE DESC
		LIMIT #startNum# , #recordCount#
	</select>
	
	
	<select id="tsmDAO.adminInfoDetail" parameterClass="tsmVO" resultMap="adminList">
		SELECT '1' IDX, AIDX, NAME, PHONE, CIDX, REG_DATE, AUTH
		FROM SMART_AGENT_INFO
		WHERe AIDX = #aidx#
	</select>
	
	<insert id="tsmDAO.agentInsert" parameterClass="tsmVO">
		INSERT INTO SMART_AGENT_INFO(
			AIDX, NAME, PASSWD, PHONE, CIDX, REG_DATE, AUTH
		) VALUES (
			#aidx#, #name#, #passwd#, #phone#, #cidx#, now(), #auth#
		)
	</insert>
	
	<update id="tsmDAO.agentUpdate" parameterClass="tsmVO">
		UPDATE SMART_AGENT_INFO
		SET
			NAME = #name#,
			PHONE = #phone#,
			auth = #auth#,
			cidx = #cidx#,
			REG_DATE = now()
			<isNotNull property="passwd">
				<isNotEmpty property="passwd">
					, PASSWD = #passwd#
				</isNotEmpty>
			</isNotNull>
		WHERE AIDX = #aidx#
	</update>
	
	<delete id="tsmDAO.agentDelete" parameterClass="tsmVO">
		DELETE FROM SMART_AGENT_INFO
		WHERE AIDX = #aidx#
	</delete>
	
	<!-- 수신거부 리스트 -->
	<resultMap id="refuseList" class="egovframework.rte.cms.service.TsmVO">
		<result property="idx" column="idx"/>
		<result property="pidx" column="pidx"/>
		<result property="mtype" column="mtype"/>
		<result property="aidx" column="aidx"/>
		<result property="refuse" column="refuse"/>
		<result property="receive_num" column="receive_num"/>
		<result property="src_table" column="src_table"/>
		<result property="src_desc" column="src_desc"/>
		<result property="reg_date" column="reg_date"/>
		<result property="mod_date" column="mod_date"/>
		<result property="del_desc" column="del_desc"/>
		<result property="status" column="status"/>
	</resultMap>
	
	<select id="tsmDAO.refuseListCnt" parameterClass="tsmVO" resultClass="int">
			SELECT COUNT(*) as CNT
			FROM SMART_MESSAGE_BANLIST
			WHERE STATUS = 'G'
			<isNotNull property="mtype">
				<isNotEmpty property="mtype">
					<isNotEqual property="mtype" compareValue="AL">
						AND MTYPE = #mtype#
					</isNotEqual>
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="refuse">
				<isNotEmpty property="refuse">
					AND REFUSE = #refuse#
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="aidx">
				<isNotEmpty property="aidx">
					AND AIDX LIKE '%' ||#aidx# || '%'
				</isNotEmpty>
			</isNotNull>
			<isNotEqual property = "src_table" compareValue="ALL">
				<isNotNull property="src_table">
					<isNotEmpty property="src_table">
						AND SRC_TABLE = #src_table#
					</isNotEmpty>
				</isNotNull>
			</isNotEqual>
			<isNotNull property="receive_num">
				<isNotEmpty property="receive_num">
					AND RECEIVE_NUM LIKE '%' || #receive_num# || '%'
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="start_date">
				<isNotEmpty property="start_date">
					<![CDATA[
						AND REG_DATE >= #start_date# 
						AND REG_DATE <= #last_date#
					]]>
				</isNotEmpty>
			</isNotNull>
	</select>
	
	
	<select id="tsmDAO.refuseList" parameterClass="tsmVO" resultMap="refuseList">
		SELECT IDX, PIDX, MTYPE, AIDX, REFUSE, RECEIVE_NUM, SRC_TABLE, SRC_DESC, REG_DATE, MOD_DATE, DEL_DESC, STATUS
		FROM (
			SELECT 
			  IDX, PIDX, MTYPE, AIDX, REFUSE, RECEIVE_NUM
			  , SRC_TABLE, SRC_DESC, date_format(REG_DATE,'%Y-%m-%d') REG_DATE, date_format(MOD_DATE,'%Y-%m-%d') MOD_DATE
			  , DEL_DESC, STATUS
			FROM (SELECT @ROWNUM := @ROWNUM + 1  AS IDX, A.* FROM SMART_MESSAGE_BANLIST AS A, (SELECT @ROWNUM:= 0) TMP ORDER BY A.REG_DATE DESC) AS A
			WHERE STATUS = 'G'
			<isNotNull property="mtype">
				<isNotEmpty property="mtype">
					<isNotEqual property="mtype" compareValue="AL">
						AND MTYPE = #mtype#
					</isNotEqual>
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="refuse">
				<isNotEmpty property="refuse">
					AND REFUSE = #refuse#
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="aidx">
				<isNotEmpty property="aidx">
					AND AIDX LIKE '%' ||#aidx# || '%'
				</isNotEmpty>
			</isNotNull>
			<isNotEqual property = "src_table" compareValue="ALL">
				<isNotNull property="src_table">
					<isNotEmpty property="src_table">
						AND SRC_TABLE = #src_table#
					</isNotEmpty>
				</isNotNull>
			</isNotEqual>
			<isNotNull property="receive_num">
				<isNotEmpty property="receive_num">
					AND RECEIVE_NUM LIKE '%' || #receive_num# || '%'
				</isNotEmpty>
			</isNotNull>
			<isNotNull property="start_date">
				<isNotEmpty property="start_date">
					<![CDATA[
						AND REG_DATE >= #start_date# 
						AND REG_DATE <= #last_date#
					]]>
				</isNotEmpty>
			</isNotNull>
			  ORDER BY REG_DATE DESC
			) a
			<![CDATA[
				WHERE IDX > #startNum# AND IDX <= (#startNum# + #recordCount#)
			]]>
			ORDER BY a.REG_DATE DESC
		
	</select>
	
	
	<select id="tsmDAO.refuseDetail" parameterClass="tsmVO" resultMap="refuseList">
		SELECT 
		  '1' IDX, PIDX, MTYPE, AIDX, REFUSE, RECEIVE_NUM
		  , SRC_TABLE, SRC_DESC, date_format(REG_DATE,'%Y-%m-%d')  REG_DATE, date_format(MOD_DATE,'%Y-%m-%d')  MOD_DATE
		  , DEL_DESC, STATUS
		FROM SMART_MESSAGE_BANLIST
		WHERE PIDX = #pidx#
	</select>
	
	<update id="tsmDAO.refuseModify" parameterClass="tsmVO">
		UPDATE SMART_MESSAGE_BANLIST
		SET
			REFUSE = #refuse#
			, MTYPE = #mtype#
			, SRC_TABLE  = #src_table#
			, MOD_DATE = now()			
		WHERE PIDX = #pidx#
	</update>
	
	<update id="tsmDAO.refuseDelete" parameterClass="tsmVO">
		UPDATE SMART_MESSAGE_BANLIST
		SET
			DEL_DESC = #del_desc#,
			STATUS = 'D'
		WHERE PIDX = #pidx#
	</update>
	
	
	<insert id="tsmDAO.refuseInsert" parameterClass="tsmVO">
		INSERT INTO SMART_MESSAGE_BANLIST(
		  MTYPE, AIDX, REFUSE, RECEIVE_NUM, SRC_TABLE, SRC_DESC, REG_DATE, STATUS
		) VALUES (
		   #mtype#
		  	, #aidx#
		  	, 'Y'
		  	, #receive_num#
		  	, #src_table#
		  	, #src_desc#
		  	, now()
		  	, 'G'
		)
		
		<selectKey keyProperty="pidx" resultClass="String">
			SELECT max(PIDX) PIDX
			FROM SMART_MESSAGE_BANLIST			
	   </selectKey>
	</insert>
	
	<insert id="tsmDAO.refuseInsertHistory" parameterClass="tsmVO">
		INSERT INTO SMART_MESSAGE_BANLIST_HISTORY
		(
		  SELECT * 
		  FROM SMART_MESSAGE_BANLIST
		  WHERe PIDX = #pidx# 
		)
	</insert>
	
	
	<!-- 등록여부 확인 -->
	<select id="tsmDAO.checkRefuseNum" parameterClass="tsmVO" resultClass="int">
		SELECT COUNT(*)
		FROM SMART_MESSAGE_BANLIST
		WHERE RECEIVE_NUM = #receive_num# AND STATUS= 'G'
	</select>
	
	
	
	<resultMap id="chartgraph" class="egovframework.rte.cms.service.TsmVO">
		<result property="mtype" column="mtype"/>
		<result property="fail_yn" column="fail_yn"/>
		<result property="cnt" column="cnt"/>
	</resultMap>
	
	
	<select id="tsmDAO.msgChartGraph" parameterClass="tsmVO" resultMap="chartgraph">
		SELECT A.MTYPE, A.FAIL_YN, COUNT(*) AS CNT
		FROM
		(
		  SELECT 
		  MTYPE, if(req_result = '1000', 'S', 'F') AS FAIL_YN
		   FROM $table_name$
		  WHERE REQ_DATE BETWEEN str_to_date(date_format(now(), '%Y%m%d'), '%Y%m%d') AND now()
		) A
		GROUP BY A.MTYPE, A.FAIL_YN
		ORDER BY A.MTYPE DESC
	</select>
	
	
	<resultMap id="chartgraphdetail" class="egovframework.rte.cms.service.TsmVO">
		<result property="mtype" column="mtype"/>
		<result property="code" column="code"/>
		<result property="cnt" column="cnt"/>
		<result property="subject" column="subject"/>
	</resultMap>
	

	<select id="tsmDAO.msgChartGraphDetail" parameterClass="tsmVO" resultMap="chartgraphdetail">
		SELECT A.MTYPE, CODE, SUBJECT, count(*) AS CNT
		FROM
		(
			SELECT 
			LOG.MTYPE, LOG.CODE, LOG.REQ_RESULT, TEMPLATE.SUBJECT
			 FROM $table_name$ AS LOG, SMART_MESSAGE_TEMPLATE as TEMPLATE
			WHERE LOG.REQ_DATE BETWEEN str_to_date(date_format(now(), '%Y%m%d'), '%Y%m%d') AND now()
				<![CDATA[
					  AND LOG.REQ_RESULT <> '1000'
					  AND TEMPLATE.CODE = LOG.CODE
				]]>
		) A
		GROUP BY A.MTYPE , A.CODE
		ORDER BY MTYPE, CNT DESC
	</select>
	
	<resultMap id="realtimeData" class="egovframework.rte.cms.service.TsmVO">
		<result property="realtime_type" column="type"/>
		<result property="realtime_status" column="status"/>
		<result property="realtime_cnt" column="cnt"/>
	</resultMap>
	
	<resultMap id="realtimeDataTotal" class="egovframework.rte.cms.service.TsmVO">
		<result property="realtime_type" column="mtype"/>
		<result property="realtime_status" column="is_work"/>
		<result property="realtime_cnt" column="cnt"/>
	</resultMap>
	
	
	<select id="tsmDAO.realTimeData" parameterClass="tsmVO" resultMap="realtimeData">
			SELECT 
				'SMS' type, STATUS as status, ifnull(count(*), 0) cnt 
			FROM 
				SMS_MSG
			where  
			<![CDATA[    
				REQDATE > DATE_SUB( CURDATE( ) ,INTERVAL 3 Day )
			]]>
			group by STATUS 
			UNION
			SELECT 
				'LMS' type, STATUS as status, ifnull(count(*), 0) cnt 
			FROM 
				MMS_MSG
			where  
			<![CDATA[    
				REQDATE > DATE_SUB( CURDATE( ) ,INTERVAL 3 Day )
			]]>
			group by STATUS 
			UNION
			SELECT 
				'KAKAO' type, msg_status, ifnull(count(*), 0) cnt 
			FROM 
				ata_mmt_tran
			where  
			<![CDATA[    
				date_client_req > DATE_SUB( CURDATE( ) ,INTERVAL 3 Day )
			]]>
			group by 
				msg_status
			order by 
				type desc
		
	</select>
	
	<select id="tsmDAO.realTimeDataOld" parameterClass="tsmVO" resultMap="realtimeData">
			SELECT 
				'SMS' type, STATUS as status, ifnull(count(*), 0) cnt 
			FROM 
				SMS_MSG
			where  
			<![CDATA[    
				REQDATE > DATE_SUB( CURDATE( ) ,INTERVAL 3 Day )
			]]>
			group by STATUS 
			UNION
			SELECT 
				'LMS' type, STATUS as status, ifnull(count(*), 0) cnt 
			FROM 
				MMS_MSG
			where  
			<![CDATA[    
				REQDATE > DATE_SUB( CURDATE( ) ,INTERVAL 3 Day )
			]]>
			group by STATUS 
			UNION
			SELECT 
				'KAKAO' type, msg_status, ifnull(count(*), 0) cnt 
			FROM 
				em_mmt_tran
			where  
			<![CDATA[    
				date_client_req > DATE_SUB( CURDATE( ) ,INTERVAL 3 Day )
			]]>
			group by 
				msg_status
			order by 
				type desc
		
	</select>
	
	<select id="tsmDAO.realTimeDataTotal" parameterClass="tsmVO" resultMap="realtimeDataTotal">
			SELECT 
			  MTYPE, IS_WORK, count(*) as cnt
			FROM
			  SMART_MESSAGE_TOTAL
			WHERE 
			<![CDATA[    
				REQ_DATE > DATE_SUB( CURDATE( ) ,INTERVAL 3 Day )
			]]>
			GROUP BY
  				MTYPE, IS_WORK
	</select>
	
	<select id="umsDAO.realTimeDataUMS" parameterClass="tsmVO" resultMap="realtimeData">
			SELECT 
				'SNT_REAL' as type, STATUS as status, ifnull(count(*), 0) cnt 
			FROM 
				SMART_MESSAGE_SNT
			WHERE  
			<![CDATA[ 
				REQUEST_TIME > DATE_SUB( CURDATE( ) ,INTERVAL 3 Day )
			]]>
			group by STATUS
			UNION
			SELECT 
				'SNT_BATCH' as type, STATUS as status, ifnull(count(*), 0) cnt 
			FROM 
				SMART_MESSAGE_SNTB
			WHERE  
			<![CDATA[    
				REQUEST_TIME > DATE_SUB( CURDATE( ) ,INTERVAL 3 Day )
			]]>
			group by STATUS
	</select>
	
	<select id="tsmDAO.isCodeCheck" parameterClass="tsmVO" resultClass="int">
		<![CDATA[
			SELECT COUNT(*) AS CNT
			FROM SMART_MESSAGE_TEMPLATE
			WHERE CODE = #code# AND PROCESS='S' AND `USE`= 'Y' AND PIDX <> #pidx#		
		]]>
	</select>
	
	<resultMap id="callCenterHelpData" class="egovframework.rte.cms.service.TsmVO">
	    <result property="pidx" column="seq"/>
	    <result property="cust_id" column="unique_id"/>
		<result property="content" column="req_message"/>
		<result property="res_message" column="res_message"/>
		<result property="aidx" column="res_id"/>
		<result property="reg_date" column="wrtdate"/>
		<result property="mod_date" column="res_dt"/>
		<result property="status" column="process_tp"/>
	</resultMap>
	
	<!-- 신규(STR), 진행(ING), 완료(END) -->
	<select id="tsmDAO.callCenterHelpListCnt" parameterClass="tsmVO" resultClass="int">
	    SELECT 	COUNT(*) as CNT
	    FROM 	TB_AUTOCHAT_QUESTION
	    WHERE	1=1
	    <isNotNull property="send_type">
			<isNotEmpty property="send_type">
			    <isNotEqual property="send_type" compareValue="ALL">
	           		AND PROCESS_TP = #send_type#
		        </isNotEqual>
			</isNotEmpty>
		</isNotNull>
	</select>
	
	<select id="tsmDAO.callCenterHelpList" parameterClass="tsmVO" resultMap="callCenterHelpData">
		<![CDATA[
			SELECT SEQ, UNIQUE_ID, REQ_MESSAGE, RES_MESSAGE, RES_ID, RES_DT, WRTDATE, PROCESS_TP
			FROM (
				SELECT @RN:= @RN+1 as IDX, SEQ, UNIQUE_ID, REQ_MESSAGE, RES_MESSAGE, RES_ID, RES_DT
						, WRTDATE, PROCESS_TP
				FROM TB_AUTOCHAT_QUESTION te, (SELECT @RN := 0) ct
				WHERE 1=1 
		]]>
				<isNotNull property="send_type">
					<isNotEmpty property="send_type">
					    <isNotEqual property="send_type" compareValue="ALL">
			           		AND PROCESS_TP = #send_type#
				        </isNotEqual>
					</isNotEmpty>
				</isNotNull>
		) a
		ORDER BY a.WRTDATE DESC
		LIMIT #startNum#, #recordCount#
	</select>
	
	<select id="tsmDAO.callCenterHelpDetail" parameterClass="tsmVO" resultMap="callCenterHelpData">
		SELECT SEQ, UNIQUE_ID, REQ_MESSAGE, RES_MESSAGE, RES_ID, RES_DT, WRTDATE, PROCESS_TP
		FROM TB_AUTOCHAT_QUESTION
		WHERE SEQ = #pidx#
	</select>
	
	<update id="tsmDAO.callCenterHelpUpdate" parameterClass="tsmVO">
	    UPDATE TB_AUTOCHAT_QUESTION
		SET 
			RES_MESSAGE = #res_message#
		    , RES_DT = NOW()
		    , RES_ID = #aidx#
		    , PROCESS_TP = #status#
		WHERE SEQ = #pidx#
	</update>
	
	<resultMap id="callCenterScenarioData" class="egovframework.rte.cms.service.TsmVO">
	    <result property="pidx" column="seq"/>
	    <result property="priority" column="step"/>
	    <result property="order_num" column="trun"/>
		<result property="subject" column="req_message"/>
		<result property="res_message" column="res_message"/>
		<result property="reg_date" column="wrtdate"/>
		<result property="etc1" column="etc1"/>
		<result property="etc2" column="etc2"/>
	</resultMap>
	
	<select id="tsmDAO.callCenterScenarioListCnt" parameterClass="tsmVO" resultClass="int">
	    SELECT 	COUNT(*) as CNT
	    FROM 	TB_AUTOCHAT_SCENARIO
	    WHERE	1=1
	</select>
	
	<select id="tsmDAO.callCenterScenarioList" parameterClass="tsmVO" resultMap="callCenterScenarioData">
		SELECT SEQ, STEP, TRUN, REQ_MESSAGE, RES_MESSAGE, WRTDATE, ETC1, ETC2
		FROM (
			SELECT @RN:= @RN+1 as IDX, SEQ, STEP, TRUN, REQ_MESSAGE, RES_MESSAGE, WRTDATE, ETC1, ETC2
			FROM TB_AUTOCHAT_SCENARIO te, (SELECT @RN := 0) ct
			WHERE 1=1 
		) a
		ORDER BY a.WRTDATE DESC
		LIMIT #startNum#, #recordCount#
	</select>
	
	<select id="tsmDAO.callCenterScenarioManageList" parameterClass="tsmVO" resultMap="callCenterScenarioData">
		SELECT SEQ, STEP, TRUN, REQ_MESSAGE, RES_MESSAGE, WRTDATE, ETC1, ETC2
		FROM (
			SELECT @RN:= @RN+1 as IDX, SEQ, STEP, TRUN, REQ_MESSAGE, RES_MESSAGE, WRTDATE, ETC1, ETC2
			FROM TB_AUTOCHAT_SCENARIO te, (SELECT @RN := 0) ct
			WHERE 1=1 
		) a
		ORDER BY a.TRUN, a.WRTDATE DESC
		LIMIT #startNum#, #recordCount#
	</select>
	
	<select id="tsmDAO.callCenterScenarioDetail" parameterClass="tsmVO" resultMap="callCenterScenarioData">
		SELECT SEQ, STEP, TRUN, REQ_MESSAGE, RES_MESSAGE, WRTDATE, ETC1, ETC2
		FROM TB_AUTOCHAT_SCENARIO
		WHERE SEQ = #pidx#
	</select>
	
	<insert id="tsmDAO.callCenterScenarioInsert" parameterClass="tsmVO">
		INSERT INTO TB_AUTOCHAT_SCENARIO
			(STEP, TRUN, REQ_MESSAGE, RES_MESSAGE, WRTDATE)
		VALUES
			('0', '0', #subject#, #res_message#, NOW());
			
		<selectKey keyProperty="pidx" resultClass="String">
			SELECT SEQ FROM (
				SELECT SEQ FROM TB_AUTOCHAT_SCENARIO ORDER BY SEQ DESC
			) d
			LIMIT 1
	   </selectKey>
	</insert>
	
	<insert id="tsmDAO.callCenterScenarioHistoryInsert" parameterClass="tsmVO">
	    INSERT INTO TB_AUTOCHAT_SCENARIO_HISTORY
			(SEQ, STEP, TRUN, REQ_MESSAGE, RES_MESSAGE, WRTDATE, ETC1, ETC2, ETC3)
		VALUES
			(#pidx#, #priority#, #order_num#, #subject#, #res_message#, NOW(), #etc1#, #etc2#, #etc3#);
	</insert>
	
	<update id="tsmDAO.callCenterScenarioUpdate" parameterClass="tsmVO">
		UPDATE TB_AUTOCHAT_SCENARIO
		SET
			STEP = #priority#
			, TRUN = #order_num#
			, REQ_MESSAGE = #subject#
			, RES_MESSAGE = #res_message#
			, ETC1 = #etc1#
			, ETC2 = #etc2#
		WHERE SEQ = #pidx#
	</update>
	
	<delete id="tsmDAO.callCenterScenarioDelete" parameterClass="tsmVO">
		DELETE FROM TB_AUTOCHAT_SCENARIO
		WHERE SEQ = #pidx#
	</delete>
	
	<resultMap id="callCenterStatsData" class="egovframework.rte.cms.service.TsmVO">
	    <result property="stats_total_cnt" column="stats_total_cnt"/>
	    <result property="stats_finish_cnt" column="stats_finish_cnt"/>
		<result property="stats_question_cnt" column="stats_question_cnt"/>
		<result property="stats_wait_cnt" column="stats_wait_cnt"/>
	</resultMap>
	
	<select id="tsmDAO.callCenterDayStats" parameterClass="tsmVO" resultMap="callCenterStatsData">
		SELECT  COUNT(*) AS STATS_TOTAL_CNT
		        , SUM((CASE WHEN PROCESS_TP = 'END' THEN 1 ELSE 0 END)) AS STATS_FINISH_CNT
		        , SUM((CASE WHEN PROCESS_TP = 'ING' THEN 1 ELSE 0 END)) AS STATS_QUESTION_CNT
		        , SUM((CASE WHEN PROCESS_TP = 'STR' THEN 1 ELSE 0 END)) AS STATS_WAIT_CNT
		FROM	TB_AUTOCHAT_QUESTION
		WHERE 	1=1
		<![CDATA[
			AND WRTDATE >= CONCAT(DATE_FORMAT(#start_date#, '%Y-%m-%d'), ' 00:00:00') 
			AND WRTDATE <= CONCAT(DATE_FORMAT(#start_date#, '%Y-%m-%d'), ' 23:59:59')
		]]>
	</select>
	
	<select id="tsmDAO.callCenterMonthStats" parameterClass="tsmVO" resultMap="callCenterStatsData">
		SELECT  COUNT(*) AS STATS_TOTAL_CNT
		        , SUM((CASE WHEN PROCESS_TP = 'END' THEN 1 ELSE 0 END)) AS STATS_FINISH_CNT
		        , SUM((CASE WHEN PROCESS_TP = 'ING' THEN 1 ELSE 0 END)) AS STATS_QUESTION_CNT
		        , SUM((CASE WHEN PROCESS_TP = 'STR' THEN 1 ELSE 0 END)) AS STATS_WAIT_CNT
		FROM	TB_AUTOCHAT_QUESTION
		WHERE 	1=1
		<![CDATA[
			AND WRTDATE >= #start_date#
			AND WRTDATE < #last_date#
		]]>
	</select>
	
	<resultMap id="cu_phoneData" class="egovframework.rte.cms.service.TsmVO">
	    <result property="phone" column="phone"/>
	</resultMap>
	
	<select id="tsmDAO.select_question_cuphone" parameterClass="tsmVO" resultMap="cu_phoneData">
		SELECT PHONE
		FROM TB_AUTOCHAT_CUSTOMER CU, TB_AUTOCHAT_QUESTION QU
		WHERE CU.UNIQUE_ID = QU.UNIQUE_ID
		AND QU.SEQ = #pidx#
	</select>
	
	<insert id="tsmDAO.insert_total" parameterClass="tsmVO">
		INSERT INTO SMART_MESSAGE_TOTAL(
			MTYPE,
			AIDX,
			UKEY,
			MESSAGE,
			SENDER,
			RECEIVE_NUM,
			REQ_DATE,
			RESERVE_DATE,
			IS_WORK,
			SRC_TABLE,
			CODE,
			FAX_FILE
		) VALUES(
			'R',
			#aidx#,
			#ukey#,
			#message#,
			'',
			#receive_num#,
			now(),
			now(),
			'P',
			'',
			'TEMP0002',
			''
		)
    </insert>
    
	
	<select id="tsmDAO.campaignTotalCnt" parameterClass="tsmVO" resultClass="int">
		SELECT COUNT(*) as CNT
		FROM TB_CAMPAIGN
		WHERE 1=1 
			<isNotNull property="subject">
				<isNotEmpty property="subject">
					AND SUBJECT LIKE CONCAT('%' , #subject# , '%')
				</isNotEmpty>
			</isNotNull>
			<isNotEqual property="use_yn" compareValue="All">
				<isNotNull property="use_yn">
					<isNotEmpty property="use_yn">
						AND USE_YN = #use_yn#
					</isNotEmpty>
				</isNotNull>
			</isNotEqual>
	</select>
		
	<select id="tsmDAO.campaignList" parameterClass="tsmVO" resultMap="campaignList">
		SELECT SEQ, AIDX, SUBJECT, CONTENT, DATE_FORMAT(WRTDATE,"%Y-%m-%d") as WRTDATE ,DATE_FORMAT(date_add(WRTDATE,interval + LINK_LIMIT day),"%Y-%m-%d") as link_limit_day, LINK_LIMIT, LINK_CNT, USE_YN 
		FROM (
			SELECT @RN:= @RN+1 as IDX, SEQ, AIDX, SUBJECT, CONTENT, WRTDATE, LINK_LIMIT, LINK_CNT, USE_YN
			FROM TB_CAMPAIGN te, (SELECT @RN := 0) ct
			WHERE 1=1 
			<isNotNull property="subject">
				<isNotEmpty property="subject">
					AND SUBJECT LIKE CONCAT('%' , #subject# , '%')
				</isNotEmpty>
			</isNotNull>
			<isNotEqual property="use_yn" compareValue="All">
				<isNotNull property="use_yn">
					<isNotEmpty property="use_yn">
						AND USE_YN = #use_yn#
					</isNotEmpty>
				</isNotNull>
			</isNotEqual>
		) a
		ORDER BY a.WRTDATE DESC
		LIMIT #startNum#, #recordCount#
	</select>
	
	<select id="tsmDAO.campaignDetail" parameterClass="tsmVO" resultMap="campaignDetail">
		SELECT 
			SEQ, AIDX, SUBJECT, CONTENT, DATE_FORMAT(WRTDATE,"%Y-%m-%d") as WRTDATE,
			DATE_FORMAT(date_add(WRTDATE,interval + LINK_LIMIT day),"%Y-%m-%d") as link_limit_day,
			LINK_LIMIT, LINK_CNT, USE_YN
		FROM 
			TB_CAMPAIGN
		WHERE SEQ = #seq#
	</select>
	
</sqlMap>
